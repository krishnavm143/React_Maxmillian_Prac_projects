{"ast":null,"code":"var _jsxFileName = \"/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/ReactDom/reat_dom/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport './App.css';\nimport Button from './components/UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showPara, setShowPara] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  const toggleParagraphHandler = useCallback(() => {\n    if (allowToggle) {\n      setShowPara(prevShowPara => !prevShowPara);\n    }\n  }, [allowToggle]);\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), showPara && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Toggle Paragraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AgycgpXQNyD318a4P8/z+8KWv4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","Button","jsxDEV","_jsxDEV","App","_s","showPara","setShowPara","allowToggle","setAllowToggle","toggleParagraphHandler","prevShowPara","allowToggleHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/ReactDom/reat_dom/src/App.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport './App.css';\nimport Button from './components/UI/Button/Button'\nfunction App() {\nconst [showPara,setShowPara]=  useState(false)\n  const [allowToggle, setAllowToggle] = useState(false)\n const toggleParagraphHandler =useCallback(( ) =>{\n   if (allowToggle) {\n    setShowPara(prevShowPara => !prevShowPara)\n\n    }\n  },[allowToggle])\n  const allowToggleHandler = () => {\n    setAllowToggle(true)\n }\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      {showPara && <p>This is new</p>}\n      <Button onClick={allowToggleHandler}>Allow Toggle</Button>\n      <Button onClick={toggleParagraphHandler}>Toggle Paragraph</Button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAEpD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAMU,sBAAsB,GAAEX,WAAW,CAAC,MAAM;IAC9C,IAAIS,WAAW,EAAE;MAChBD,WAAW,CAACI,YAAY,IAAI,CAACA,YAAY,CAAC;IAE1C;EACF,CAAC,EAAC,CAACH,WAAW,CAAC,CAAC;EAChB,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,cAAc,CAAC,IAAI,CAAC;EACvB,CAAC;EACA,oBACEN,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACjBZ,QAAQ,iBAAIH,OAAA;MAAAW,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC/Bf,OAAA,CAACF,MAAM;MAACkB,OAAO,EAAEP,kBAAmB;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC1Df,OAAA,CAACF,MAAM;MAACkB,OAAO,EAAET,sBAAuB;MAAAI,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9D;AAEV;AAACb,EAAA,CApBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}