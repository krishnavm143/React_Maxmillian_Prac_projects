{"ast":null,"code":"var _jsxFileName = \"/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchMoviesHandler = async () => {\n    var _data$results;\n    setIsLoading(true);\n    const response = await fetch(`https://swapi.dev/api/films`, {\n      method: \"get\"\n    });\n    const data = await response.json();\n    const transformedData = data === null || data === void 0 ? void 0 : (_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.map(movieData => {\n      return {\n        id: movieData === null || movieData === void 0 ? void 0 : movieData.episode_id,\n        title: movieData === null || movieData === void 0 ? void 0 : movieData.title,\n        releaseDate: movieData === null || movieData === void 0 ? void 0 : movieData.release_date,\n        openingText: movieData.opening_crawl\n      };\n    });\n    setMovies([...transformedData]);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [console.log(movies), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"....Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wwiq1aIWPhJod+dTD+t6aYoCm1c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","_data$results","response","fetch","method","data","json","transformedData","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","Fragment","children","console","log","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n const [movies,setMovies]= useState([])\n\n const [isLoading,setIsLoading]=useState(false)\n\n  const fetchMoviesHandler = async()=>{\n    setIsLoading(true)\n    const response = await fetch(`https://swapi.dev/api/films`,{\n      method:\"get\"\n    })\n\n    const data = await response.json()\n    const transformedData = data?.results?.map(movieData=>{\n      return{\n        id:movieData?.episode_id,\n        title:movieData?.title,\n        releaseDate:movieData?.release_date,\n        openingText:movieData.opening_crawl\n      }\n    })\n\n    setMovies([...transformedData])\n    setIsLoading(false)\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        {console.log(movies)}\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {isLoading ? <p>....Loading....</p> : <MoviesList movies={movies} />}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAS;IAAA,IAAAC,aAAA;IAClCF,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4B,EAAC;MACzDC,MAAM,EAAC;IACT,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IAClC,MAAMC,eAAe,GAAGF,IAAI,aAAJA,IAAI,wBAAAJ,aAAA,GAAJI,IAAI,CAAEG,OAAO,cAAAP,aAAA,uBAAbA,aAAA,CAAeQ,GAAG,CAACC,SAAS,IAAE;MACpD,OAAM;QACJC,EAAE,EAACD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,UAAU;QACxBC,KAAK,EAACH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,KAAK;QACtBC,WAAW,EAACJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,YAAY;QACnCC,WAAW,EAACN,SAAS,CAACO;MACxB,CAAC;IACH,CAAC,CAAC;IAEFpB,SAAS,CAAC,CAAC,GAAGU,eAAe,CAAC,CAAC;IAC/BR,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA,CAACJ,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACb1B,OAAA;MAAA0B,QAAA,GACGC,OAAO,CAACC,GAAG,CAACzB,MAAM,CAAC,eACpBH,OAAA;QAAQ6B,OAAO,EAAEtB,kBAAmB;QAAAmB,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClD,eACVjC,OAAA;MAAA0B,QAAA,EACGrB,SAAS,gBAAGL,OAAA;QAAA0B,QAAA,EAAG;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,gBAAGjC,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAErB;AAAC/B,EAAA,CApCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}