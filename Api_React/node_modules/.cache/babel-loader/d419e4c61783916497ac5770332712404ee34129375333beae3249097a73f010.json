{"ast":null,"code":"var _jsxFileName = \"/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = async () => {\n    setIsLoading(true);\n    try {\n      var _data$results;\n      const response = await fetch(`https://swapi.dev/api/film`, {\n        method: \"get\"\n      });\n      if (!response.ok) {\n        throw new Error('Somethin went Wrong');\n      }\n      const data = await response.json();\n      const transformedData = data === null || data === void 0 ? void 0 : (_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.map(movieData => {\n        return {\n          id: movieData === null || movieData === void 0 ? void 0 : movieData.episode_id,\n          title: movieData === null || movieData === void 0 ? void 0 : movieData.title,\n          releaseDate: movieData === null || movieData === void 0 ? void 0 : movieData.release_date,\n          openingText: movieData.opening_crawl\n        };\n      });\n      setMovies([...transformedData]);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [console.log(movies), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 47\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"....Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this), I]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zuBJAn2dLkBMoQCfa8VUzB2Qvvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","_data$results","response","fetch","method","ok","Error","data","json","transformedData","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","console","log","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","I","_c","$RefreshReg$"],"sources":["/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState(null)\n\n  const fetchMoviesHandler = async () => {\n    setIsLoading(true)\n\n    try {\n      const response = await fetch(`https://swapi.dev/api/film`, {\n        method: \"get\"\n      })\n\n      if(!response.ok){\n        throw new Error('Somethin went Wrong')\n      }\n      const data = await response.json()\n      const transformedData = data?.results?.map(movieData => {\n        return {\n          id: movieData?.episode_id,\n          title: movieData?.title,\n          releaseDate: movieData?.release_date,\n          openingText: movieData.opening_crawl\n        }\n      })\n      setMovies([...transformedData])\n      setIsLoading(false)\n\n    } catch (error) {\n      console.log(error.message)\n      setError(error.message)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        {console.log(movies)}\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>No Movies Found</p>}\n        {isLoading && <p>....Loading....</p>}\n        {I}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}