{"ast":null,"code":"var _jsxFileName = \"/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`, {\n        method: \"get\"\n      });\n      if (!response.ok) {\n        throw new Error('Somethin went Wrong');\n      }\n      const data = await response.json();\n      console.log(data);\n      const loadingMovies = [];\n      for (const key in data) {\n        loadingMovies.push({\n          id: key,\n          title: data[key].title,\n          releaseDate: data[key].releaseDate,\n          openingText: data[key].openingText\n        });\n      }\n      // console.log(loa)\n      // const transformedData = data?.results?.map(movieData => {\n      //   return {\n      //     id: movieData?.episode_id,\n      //     title: movieData?.title,\n      //     releaseDate: movieData?.release_date,\n      //     openingText: movieData?.opening_crawl\n      //   }\n      // })\n      setMovies([...loadingMovies]);\n      // setIsLoading(false)\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Movies Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"....Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this);\n  }\n  async function addMovieHandler(movie) {\n    // console.log(movie)\n    const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`, {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log('respinse post', data);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [console.log(movies), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","method","ok","Error","data","json","console","log","loadingMovies","key","push","id","title","releaseDate","openingText","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","addMovieHandler","movie","body","JSON","stringify","headers","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState(null)\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true)\n\n    try {\n      const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`, {\n        method: \"get\"\n      })\n\n      if (!response.ok) {\n        throw new Error('Somethin went Wrong')\n      }\n      const data = await response.json()\n      console.log(data)\n\n      const loadingMovies=[]\n\n      for(const key in data){\n        loadingMovies.push({\n          id:key,\n          title:data[key].title,\n          releaseDate: data[key].releaseDate,\n          openingText: data[key].openingText\n        })\n      }\n      // console.log(loa)\n      // const transformedData = data?.results?.map(movieData => {\n      //   return {\n      //     id: movieData?.episode_id,\n      //     title: movieData?.title,\n      //     releaseDate: movieData?.release_date,\n      //     openingText: movieData?.opening_crawl\n      //   }\n      // })\n      setMovies([...loadingMovies])\n      // setIsLoading(false)\n\n    } catch (error) {\n      console.log(error.message)\n      setError(error.message)\n\n    }\n    setIsLoading(false)\n  }, [])\n  useEffect(() => {\n    fetchMoviesHandler()\n  }, [fetchMoviesHandler])\n\n  let content = <p>No Movies Found</p>;\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />\n  }\n  if (error) {\n    content = <p>{error}</p>\n  }\n  if (isLoading) {\n    content = <p>....Loading....</p>\n  }\n\n  async function addMovieHandler(movie) {\n    // console.log(movie)\n    const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`, {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    const data =await response.json()\n\n    console.log('respinse post',data)\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        {console.log(movies)}\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}