{"ast":null,"code":"var _jsxFileName = \"/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      var _data$results;\n      const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`, {\n        method: \"get\"\n      });\n      if (!response.ok) {\n        throw new Error('Somethin went Wrong');\n      }\n      const data = await response.json();\n      const transformedData = data === null || data === void 0 ? void 0 : (_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.map(movieData => {\n        return {\n          id: movieData === null || movieData === void 0 ? void 0 : movieData.episode_id,\n          title: movieData === null || movieData === void 0 ? void 0 : movieData.title,\n          releaseDate: movieData === null || movieData === void 0 ? void 0 : movieData.release_date,\n          openingText: movieData === null || movieData === void 0 ? void 0 : movieData.opening_crawl\n        };\n      });\n      setMovies([...transformedData]);\n      // setIsLoading(false)\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Movies Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"....Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this);\n  }\n  async function addMovieHandler(movie) {\n    // console.log(movie)\n    const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`, {\n      method: \"POST\",\n      body: JSON.stringify()\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [console.log(movies), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","_data$results","response","fetch","method","ok","Error","data","json","transformedData","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","console","log","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","addMovieHandler","movie","body","JSON","stringify","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Api_React/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState(null)\n\n  const fetchMoviesHandler = useCallback( async () => {\n    setIsLoading(true)\n\n    try {\n      const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`, {\n        method: \"get\"\n      })\n\n      if (!response.ok) {\n        throw new Error('Somethin went Wrong')\n      }\n      const data = await response.json()\n      const transformedData = data?.results?.map(movieData => {\n        return {\n          id: movieData?.episode_id,\n          title: movieData?.title,\n          releaseDate: movieData?.release_date,\n          openingText: movieData?.opening_crawl\n        }\n      })\n      setMovies([...transformedData])\n      // setIsLoading(false)\n\n    } catch (error) {\n      console.log(error.message)\n      setError(error.message)\n\n    }\n    setIsLoading(false)\n  },[])\n  useEffect(()=>{\n    fetchMoviesHandler()\n  },[fetchMoviesHandler])\n\n  let content = <p>No Movies Found</p>;\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />\n  }\n  if (error) {\n    content = <p>{error}</p>\n  }\n  if (isLoading) {\n    content = <p>....Loading....</p>\n  }\n\n async function addMovieHandler(movie){\n    // console.log(movie)\n  const response = await fetch(`https://fetch-app-7d637-default-rtdb.firebaseio.com/movies.json`,{\n    method:\"POST\",\n    body:JSON.stringify()\n  })\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler}/>\n      </section>\n      <section>\n        {console.log(movies)}\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}