{"ast":null,"code":"var _jsxFileName = \"/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/food-order-app/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartIemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartIemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartIemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartIemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartIemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/food-order-app/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartIemIndex = state.items.findIndex(item=>item.id===action.item.id)\n    const existingCartItem = state.items[existingCartIemIndex];\n    let updatedItems;   \n    if(existingCartItem){\n        const updatedItem={\n            ...existingCartItem,\n            amount:existingCartItem.amount + action.item.amount\n        }\n        updatedItems=[...state.items]\n        updatedItems[existingCartIemIndex]=updatedItem\n    }\n    else{\n        updatedItems = state.items.concat( action.item)\n    }\n   \n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if(action.type === \"REMOVE\"){\n    const existingCartIemIndex = state.items.findIndex(item=>item.id===action.id)\n    const existingItem = state.items[existingCartIemIndex]\n\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems\n    if(existingItem.amount === 1){\n        updatedItems= state.items.filter(item=> item.id !== action.id)\n    }\n    else{\n        const updatedItem = {...existingItem,amount:existingItem.amount-1}\n        updatedItems = [...state.items]\n        updatedItems[existingCartIemIndex]=updatedItem\n    }\n    return{\n        items:updatedItems\n    }\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: 'ADD', item: item});\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({type: 'REMOVE', id: id});\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}