{"ast":null,"code":"var _jsxFileName = \"/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Form__inputs/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [error, setError] = useState(false);\n  const inputSubmitHandler = e => {\n    e.preventDefault();\n    if (enteredName.trim() === \"\") {\n      setError(true);\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName('');\n  };\n  const nameInputClasses = !error ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: inputSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        onChange: e => {\n          setError(false);\n          setEnteredName(e.target.value);\n        },\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter some value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"7kDO5Af1R/E/FBzAb6rIilqIqC4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","error","setError","inputSubmitHandler","e","preventDefault","trim","console","log","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","id","_c","$RefreshReg$"],"sources":["/home/user1/Documents/GitHub/React_Maxmillian_Prac_projects/Form__inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('')\n  const [error, setError] = useState(false)\n\n  const inputSubmitHandler = (e) => {\n    e.preventDefault()\n    if (enteredName.trim() === \"\") {\n      setError(true)\n      return\n    }\n    console.log(enteredName)\n    setEnteredName('')\n  }\n  const nameInputClasses = !error ? 'form-control' : 'form-control invalid'\n  return (\n    <form onSubmit={inputSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input value={enteredName} onChange={(e) => {\n          setError(false)\n          setEnteredName(e.target.value)\n        }} type='text' id='name' />\n        {error && <p className=\"error-text\">Please Enter some value</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMU,kBAAkB,GAAIC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIN,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BJ,QAAQ,CAAC,IAAI,CAAC;MACd;IACF;IACAK,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;IACxBC,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EACD,MAAMS,gBAAgB,GAAG,CAACR,KAAK,GAAG,cAAc,GAAG,sBAAsB;EACzE,oBACEN,OAAA;IAAMe,QAAQ,EAAEP,kBAAmB;IAAAQ,QAAA,gBACjChB,OAAA;MAAKiB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BhB,OAAA;QAAOkB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvCtB,OAAA;QAAOuB,KAAK,EAAEnB,WAAY;QAACoB,QAAQ,EAAGf,CAAC,IAAK;UAC1CF,QAAQ,CAAC,KAAK,CAAC;UACfF,cAAc,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAC;QAChC,CAAE;QAACG,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC1BhB,KAAK,iBAAIN,OAAA;QAAGiB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3D,eACNtB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BhB,OAAA;QAAAgB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAACnB,EAAA,CA7BIF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}